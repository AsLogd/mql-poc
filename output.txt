yarn run v1.22.10
$ run-s build
$ run-s clean
$ rm -Rf ./lib
$ run-s build:*
$ mkdir lib
$ nearleyc src/grammar.ne -o lib/grammar.js
$ tsc
$ npx nearley-test lib/grammar.js
Table length: 54
Number of parses: 3
Parse Charts
Chart: 0
0: {start →  ● start$ebnf$1}, from: 0
1: {start$ebnf$1 →  ● statement}, from: 0
2: {start$ebnf$1 →  ● start$ebnf$1 statement}, from: 0
3: {statement →  ● definition _}, from: 0
4: {statement →  ● js_block _}, from: 0
5: {statement →  ● query _}, from: 0
6: {definition →  ● %define __ signature __ body}, from: 0
7: {js_block →  ● %js}, from: 0
8: {query →  ● target where expression}, from: 0
9: {target →  ● %matches}, from: 0

Chart: 1
0: {definition → %define ● __ signature __ body}, from: 0
1: {__ →  ● %ws}, from: 1

Chart: 2
0: {__ → %ws ● }, from: 1
1: {definition → %define __ ● signature __ body}, from: 0
2: {signature →  ● signature __ param_def}, from: 2
3: {signature →  ● signature __ %literal}, from: 2
4: {signature →  ● param_def __ %literal}, from: 2
5: {signature →  ● %literal __ param_def}, from: 2
6: {param_def →  ● %literal %co type}, from: 2

Chart: 3
0: {param_def → %literal ● %co type}, from: 2
1: {signature → %literal ● __ param_def}, from: 2
2: {__ →  ● %ws}, from: 3

Chart: 4
0: {param_def → %literal %co ● type}, from: 2
1: {type →  ● %match}, from: 4
2: {type →  ● %player}, from: 4
3: {type →  ● %character}, from: 4
4: {type →  ● %attack}, from: 4

Chart: 5
0: {type → %player ● }, from: 4
1: {param_def → %literal %co type ● }, from: 2
2: {signature → param_def ● __ %literal}, from: 2
3: {__ →  ● %ws}, from: 5

Chart: 6
0: {__ → %ws ● }, from: 5
1: {signature → param_def __ ● %literal}, from: 2

Chart: 7
0: {signature → param_def __ %literal ● }, from: 2
1: {signature → signature ● __ %literal}, from: 2
2: {signature → signature ● __ param_def}, from: 2
3: {definition → %define __ signature ● __ body}, from: 0
4: {__ →  ● %ws}, from: 7

Chart: 8
0: {__ → %ws ● }, from: 7
1: {definition → %define __ signature __ ● body}, from: 0
2: {signature → signature __ ● param_def}, from: 2
3: {signature → signature __ ● %literal}, from: 2
4: {body →  ● %eq _ expression}, from: 8
5: {param_def →  ● %literal %co type}, from: 8

Chart: 9
0: {param_def → %literal ● %co type}, from: 8
1: {signature → signature __ %literal ● }, from: 2
2: {signature → signature ● __ %literal}, from: 2
3: {signature → signature ● __ param_def}, from: 2
4: {definition → %define __ signature ● __ body}, from: 0
5: {__ →  ● %ws}, from: 9

Chart: 10
0: {param_def → %literal %co ● type}, from: 8
1: {type →  ● %match}, from: 10
2: {type →  ● %player}, from: 10
3: {type →  ● %character}, from: 10
4: {type →  ● %attack}, from: 10

Chart: 11
0: {type → %player ● }, from: 10
1: {param_def → %literal %co type ● }, from: 8
2: {signature → signature __ param_def ● }, from: 2
3: {signature → signature ● __ %literal}, from: 2
4: {signature → signature ● __ param_def}, from: 2
5: {definition → %define __ signature ● __ body}, from: 0
6: {__ →  ● %ws}, from: 11

Chart: 12
0: {__ → %ws ● }, from: 11
1: {definition → %define __ signature __ ● body}, from: 0
2: {signature → signature __ ● param_def}, from: 2
3: {signature → signature __ ● %literal}, from: 2
4: {body →  ● %eq _ expression}, from: 12
5: {param_def →  ● %literal %co type}, from: 12

Chart: 13
0: {param_def → %literal ● %co type}, from: 12
1: {signature → signature __ %literal ● }, from: 2
2: {signature → signature ● __ %literal}, from: 2
3: {signature → signature ● __ param_def}, from: 2
4: {definition → %define __ signature ● __ body}, from: 0
5: {__ →  ● %ws}, from: 13

Chart: 14
0: {__ → %ws ● }, from: 13
1: {definition → %define __ signature __ ● body}, from: 0
2: {signature → signature __ ● param_def}, from: 2
3: {signature → signature __ ● %literal}, from: 2
4: {body →  ● %eq _ expression}, from: 14
5: {param_def →  ● %literal %co type}, from: 14

Chart: 15
0: {param_def → %literal ● %co type}, from: 14
1: {signature → signature __ %literal ● }, from: 2
2: {signature → signature ● __ %literal}, from: 2
3: {signature → signature ● __ param_def}, from: 2
4: {definition → %define __ signature ● __ body}, from: 0
5: {__ →  ● %ws}, from: 15

Chart: 16
0: {param_def → %literal %co ● type}, from: 14
1: {type →  ● %match}, from: 16
2: {type →  ● %player}, from: 16
3: {type →  ● %character}, from: 16
4: {type →  ● %attack}, from: 16

Chart: 17
0: {type → %attack ● }, from: 16
1: {param_def → %literal %co type ● }, from: 14
2: {signature → signature __ param_def ● }, from: 2
3: {signature → signature ● __ %literal}, from: 2
4: {signature → signature ● __ param_def}, from: 2
5: {definition → %define __ signature ● __ body}, from: 0
6: {__ →  ● %ws}, from: 17

Chart: 18
0: {__ → %ws ● }, from: 17
1: {definition → %define __ signature __ ● body}, from: 0
2: {signature → signature __ ● param_def}, from: 2
3: {signature → signature __ ● %literal}, from: 2
4: {body →  ● %eq _ expression}, from: 18
5: {param_def →  ● %literal %co type}, from: 18

Chart: 19
0: {body → %eq ● _ expression}, from: 18
1: {_ →  ● _$ebnf$1}, from: 19
2: {_$ebnf$1 →  ● }, from: 19
3: {_$ebnf$1 →  ● _$ebnf$1 %ws}, from: 19
4: {_ → _$ebnf$1 ● }, from: 19
5: {_$ebnf$1 → _$ebnf$1 ● %ws}, from: 19
6: {body → %eq _ ● expression}, from: 18
7: {expression →  ● expression and term _}, from: 19
8: {expression →  ● expression or term _}, from: 19
9: {expression →  ● not expression _}, from: 19
10: {expression →  ● term _}, from: 19
11: {not →  ● __ %not __}, from: 19
12: {term →  ● sentence}, from: 19
13: {term →  ● function_call}, from: 19
14: {term →  ● %lp _ expression _ %rp}, from: 19
15: {__ →  ● %ws}, from: 19
16: {sentence →  ● sentence __ subject}, from: 19
17: {sentence →  ● sentence __ %literal}, from: 19
18: {sentence →  ● subject __ %literal}, from: 19
19: {sentence →  ● %literal __ subject}, from: 19
20: {function_call →  ● %literal %lp param_values %rp}, from: 19
21: {subject →  ● %someone}, from: 19
22: {subject →  ● %match}, from: 19
23: {subject →  ● %string}, from: 19
24: {subject →  ● %number}, from: 19
25: {subject →  ● param_ref}, from: 19
26: {param_ref →  ● %dol %literal}, from: 19

Chart: 20
0: {__ → %ws ● }, from: 19
1: {_$ebnf$1 → _$ebnf$1 %ws ● }, from: 19
2: {not → __ ● %not __}, from: 19
3: {_$ebnf$1 → _$ebnf$1 ● %ws}, from: 19
4: {_ → _$ebnf$1 ● }, from: 19
5: {body → %eq _ ● expression}, from: 18
6: {expression →  ● expression and term _}, from: 20
7: {expression →  ● expression or term _}, from: 20
8: {expression →  ● not expression _}, from: 20
9: {expression →  ● term _}, from: 20
10: {not →  ● __ %not __}, from: 20
11: {term →  ● sentence}, from: 20
12: {term →  ● function_call}, from: 20
13: {term →  ● %lp _ expression _ %rp}, from: 20
14: {__ →  ● %ws}, from: 20
15: {sentence →  ● sentence __ subject}, from: 20
16: {sentence →  ● sentence __ %literal}, from: 20
17: {sentence →  ● subject __ %literal}, from: 20
18: {sentence →  ● %literal __ subject}, from: 20
19: {function_call →  ● %literal %lp param_values %rp}, from: 20
20: {subject →  ● %someone}, from: 20
21: {subject →  ● %match}, from: 20
22: {subject →  ● %string}, from: 20
23: {subject →  ● %number}, from: 20
24: {subject →  ● param_ref}, from: 20
25: {param_ref →  ● %dol %literal}, from: 20

Chart: 21
0: {__ → %ws ● }, from: 20
1: {_$ebnf$1 → _$ebnf$1 %ws ● }, from: 19
2: {not → __ ● %not __}, from: 20
3: {_$ebnf$1 → _$ebnf$1 ● %ws}, from: 19
4: {_ → _$ebnf$1 ● }, from: 19
5: {body → %eq _ ● expression}, from: 18
6: {expression →  ● expression and term _}, from: 21
7: {expression →  ● expression or term _}, from: 21
8: {expression →  ● not expression _}, from: 21
9: {expression →  ● term _}, from: 21
10: {not →  ● __ %not __}, from: 21
11: {term →  ● sentence}, from: 21
12: {term →  ● function_call}, from: 21
13: {term →  ● %lp _ expression _ %rp}, from: 21
14: {__ →  ● %ws}, from: 21
15: {sentence →  ● sentence __ subject}, from: 21
16: {sentence →  ● sentence __ %literal}, from: 21
17: {sentence →  ● subject __ %literal}, from: 21
18: {sentence →  ● %literal __ subject}, from: 21
19: {function_call →  ● %literal %lp param_values %rp}, from: 21
20: {subject →  ● %someone}, from: 21
21: {subject →  ● %match}, from: 21
22: {subject →  ● %string}, from: 21
23: {subject →  ● %number}, from: 21
24: {subject →  ● param_ref}, from: 21
25: {param_ref →  ● %dol %literal}, from: 21

Chart: 22
0: {param_ref → %dol ● %literal}, from: 21

Chart: 23
0: {param_ref → %dol %literal ● }, from: 21
1: {subject → param_ref ● }, from: 21
2: {sentence → subject ● __ %literal}, from: 21
3: {__ →  ● %ws}, from: 23

Chart: 24
0: {__ → %ws ● }, from: 23
1: {sentence → subject __ ● %literal}, from: 21

Chart: 25
0: {sentence → subject __ %literal ● }, from: 21
1: {sentence → sentence ● __ %literal}, from: 21
2: {sentence → sentence ● __ subject}, from: 21
3: {term → sentence ● }, from: 21
4: {__ →  ● %ws}, from: 25
5: {expression → term ● _}, from: 21
6: {_ →  ● _$ebnf$1}, from: 25
7: {_$ebnf$1 →  ● }, from: 25
8: {_$ebnf$1 →  ● _$ebnf$1 %ws}, from: 25
9: {_ → _$ebnf$1 ● }, from: 25
10: {_$ebnf$1 → _$ebnf$1 ● %ws}, from: 25
11: {expression → term _ ● }, from: 21
12: {expression → expression ● or term _}, from: 21
13: {expression → expression ● and term _}, from: 21
14: {body → %eq _ expression ● }, from: 18
15: {or →  ● __ %or __}, from: 25
16: {and →  ● __ %and __}, from: 25
17: {definition → %define __ signature __ body ● }, from: 0
18: {statement → definition ● _}, from: 0
19: {statement → definition _ ● }, from: 0
20: {start$ebnf$1 → statement ● }, from: 0
21: {start$ebnf$1 → start$ebnf$1 ● statement}, from: 0
22: {start → start$ebnf$1 ● }, from: 0
23: {statement →  ● definition _}, from: 25
24: {statement →  ● js_block _}, from: 25
25: {statement →  ● query _}, from: 25
26: {definition →  ● %define __ signature __ body}, from: 25
27: {js_block →  ● %js}, from: 25
28: {query →  ● target where expression}, from: 25
29: {target →  ● %matches}, from: 25

Chart: 26
0: {_$ebnf$1 → _$ebnf$1 %ws ● }, from: 25
1: {__ → %ws ● }, from: 25
2: {_$ebnf$1 → _$ebnf$1 ● %ws}, from: 25
3: {_ → _$ebnf$1 ● }, from: 25
4: {and → __ ● %and __}, from: 25
5: {or → __ ● %or __}, from: 25
6: {sentence → sentence __ ● subject}, from: 21
7: {sentence → sentence __ ● %literal}, from: 21
8: {statement → definition _ ● }, from: 0
9: {expression → term _ ● }, from: 21
10: {subject →  ● %someone}, from: 26
11: {subject →  ● %match}, from: 26
12: {subject →  ● %string}, from: 26
13: {subject →  ● %number}, from: 26
14: {subject →  ● param_ref}, from: 26
15: {start$ebnf$1 → statement ● }, from: 0
16: {expression → expression ● or term _}, from: 21
17: {expression → expression ● and term _}, from: 21
18: {body → %eq _ expression ● }, from: 18
19: {param_ref →  ● %dol %literal}, from: 26
20: {start$ebnf$1 → start$ebnf$1 ● statement}, from: 0
21: {start → start$ebnf$1 ● }, from: 0
22: {or →  ● __ %or __}, from: 26
23: {and →  ● __ %and __}, from: 26
24: {definition → %define __ signature __ body ● }, from: 0
25: {statement →  ● definition _}, from: 26
26: {statement →  ● js_block _}, from: 26
27: {statement →  ● query _}, from: 26
28: {__ →  ● %ws}, from: 26
29: {statement → definition ● _}, from: 0
30: {definition →  ● %define __ signature __ body}, from: 26
31: {js_block →  ● %js}, from: 26
32: {query →  ● target where expression}, from: 26
33: {_ →  ● _$ebnf$1}, from: 26
34: {target →  ● %matches}, from: 26
35: {_$ebnf$1 →  ● }, from: 26
36: {_$ebnf$1 →  ● _$ebnf$1 %ws}, from: 26
37: {_ → _$ebnf$1 ● }, from: 26
38: {_$ebnf$1 → _$ebnf$1 ● %ws}, from: 26
39: {statement → definition _ ● }, from: 0
40: {start$ebnf$1 → statement ● }, from: 0
41: {start$ebnf$1 → start$ebnf$1 ● statement}, from: 0
42: {start → start$ebnf$1 ● }, from: 0

Chart: 27
0: {param_ref → %dol ● %literal}, from: 26

Chart: 28
0: {param_ref → %dol %literal ● }, from: 26
1: {subject → param_ref ● }, from: 26
2: {sentence → sentence __ subject ● }, from: 21
3: {sentence → sentence ● __ %literal}, from: 21
4: {sentence → sentence ● __ subject}, from: 21
5: {term → sentence ● }, from: 21
6: {__ →  ● %ws}, from: 28
7: {expression → term ● _}, from: 21
8: {_ →  ● _$ebnf$1}, from: 28
9: {_$ebnf$1 →  ● }, from: 28
10: {_$ebnf$1 →  ● _$ebnf$1 %ws}, from: 28
11: {_ → _$ebnf$1 ● }, from: 28
12: {_$ebnf$1 → _$ebnf$1 ● %ws}, from: 28
13: {expression → term _ ● }, from: 21
14: {expression → expression ● or term _}, from: 21
15: {expression → expression ● and term _}, from: 21
16: {body → %eq _ expression ● }, from: 18
17: {or →  ● __ %or __}, from: 28
18: {and →  ● __ %and __}, from: 28
19: {definition → %define __ signature __ body ● }, from: 0
20: {statement → definition ● _}, from: 0
21: {statement → definition _ ● }, from: 0
22: {start$ebnf$1 → statement ● }, from: 0
23: {start$ebnf$1 → start$ebnf$1 ● statement}, from: 0
24: {start → start$ebnf$1 ● }, from: 0
25: {statement →  ● definition _}, from: 28
26: {statement →  ● js_block _}, from: 28
27: {statement →  ● query _}, from: 28
28: {definition →  ● %define __ signature __ body}, from: 28
29: {js_block →  ● %js}, from: 28
30: {query →  ● target where expression}, from: 28
31: {target →  ● %matches}, from: 28

Chart: 29
0: {_$ebnf$1 → _$ebnf$1 %ws ● }, from: 28
1: {__ → %ws ● }, from: 28
2: {_$ebnf$1 → _$ebnf$1 ● %ws}, from: 28
3: {_ → _$ebnf$1 ● }, from: 28
4: {and → __ ● %and __}, from: 28
5: {or → __ ● %or __}, from: 28
6: {sentence → sentence __ ● subject}, from: 21
7: {sentence → sentence __ ● %literal}, from: 21
8: {statement → definition _ ● }, from: 0
9: {expression → term _ ● }, from: 21
10: {subject →  ● %someone}, from: 29
11: {subject →  ● %match}, from: 29
12: {subject →  ● %string}, from: 29
13: {subject →  ● %number}, from: 29
14: {subject →  ● param_ref}, from: 29
15: {start$ebnf$1 → statement ● }, from: 0
16: {expression → expression ● or term _}, from: 21
17: {expression → expression ● and term _}, from: 21
18: {body → %eq _ expression ● }, from: 18
19: {param_ref →  ● %dol %literal}, from: 29
20: {start$ebnf$1 → start$ebnf$1 ● statement}, from: 0
21: {start → start$ebnf$1 ● }, from: 0
22: {or →  ● __ %or __}, from: 29
23: {and →  ● __ %and __}, from: 29
24: {definition → %define __ signature __ body ● }, from: 0
25: {statement →  ● definition _}, from: 29
26: {statement →  ● js_block _}, from: 29
27: {statement →  ● query _}, from: 29
28: {__ →  ● %ws}, from: 29
29: {statement → definition ● _}, from: 0
30: {definition →  ● %define __ signature __ body}, from: 29
31: {js_block →  ● %js}, from: 29
32: {query →  ● target where expression}, from: 29
33: {_ →  ● _$ebnf$1}, from: 29
34: {target →  ● %matches}, from: 29
35: {_$ebnf$1 →  ● }, from: 29
36: {_$ebnf$1 →  ● _$ebnf$1 %ws}, from: 29
37: {_ → _$ebnf$1 ● }, from: 29
38: {_$ebnf$1 → _$ebnf$1 ● %ws}, from: 29
39: {statement → definition _ ● }, from: 0
40: {start$ebnf$1 → statement ● }, from: 0
41: {start$ebnf$1 → start$ebnf$1 ● statement}, from: 0
42: {start → start$ebnf$1 ● }, from: 0

Chart: 30
0: {and → __ %and ● __}, from: 28
1: {__ →  ● %ws}, from: 30

Chart: 31
0: {__ → %ws ● }, from: 30
1: {and → __ %and __ ● }, from: 28
2: {expression → expression and ● term _}, from: 21
3: {term →  ● sentence}, from: 31
4: {term →  ● function_call}, from: 31
5: {term →  ● %lp _ expression _ %rp}, from: 31
6: {sentence →  ● sentence __ subject}, from: 31
7: {sentence →  ● sentence __ %literal}, from: 31
8: {sentence →  ● subject __ %literal}, from: 31
9: {sentence →  ● %literal __ subject}, from: 31
10: {function_call →  ● %literal %lp param_values %rp}, from: 31
11: {subject →  ● %someone}, from: 31
12: {subject →  ● %match}, from: 31
13: {subject →  ● %string}, from: 31
14: {subject →  ● %number}, from: 31
15: {subject →  ● param_ref}, from: 31
16: {param_ref →  ● %dol %literal}, from: 31

Chart: 32
0: {param_ref → %dol ● %literal}, from: 31

Chart: 33
0: {param_ref → %dol %literal ● }, from: 31
1: {subject → param_ref ● }, from: 31
2: {sentence → subject ● __ %literal}, from: 31
3: {__ →  ● %ws}, from: 33

Chart: 34
0: {__ → %ws ● }, from: 33
1: {sentence → subject __ ● %literal}, from: 31

Chart: 35
0: {sentence → subject __ %literal ● }, from: 31
1: {sentence → sentence ● __ %literal}, from: 31
2: {sentence → sentence ● __ subject}, from: 31
3: {term → sentence ● }, from: 31
4: {__ →  ● %ws}, from: 35
5: {expression → expression and term ● _}, from: 21
6: {_ →  ● _$ebnf$1}, from: 35
7: {_$ebnf$1 →  ● }, from: 35
8: {_$ebnf$1 →  ● _$ebnf$1 %ws}, from: 35
9: {_ → _$ebnf$1 ● }, from: 35
10: {_$ebnf$1 → _$ebnf$1 ● %ws}, from: 35
11: {expression → expression and term _ ● }, from: 21
12: {expression → expression ● or term _}, from: 21
13: {expression → expression ● and term _}, from: 21
14: {body → %eq _ expression ● }, from: 18
15: {or →  ● __ %or __}, from: 35
16: {and →  ● __ %and __}, from: 35
17: {definition → %define __ signature __ body ● }, from: 0
18: {statement → definition ● _}, from: 0
19: {statement → definition _ ● }, from: 0
20: {start$ebnf$1 → statement ● }, from: 0
21: {start$ebnf$1 → start$ebnf$1 ● statement}, from: 0
22: {start → start$ebnf$1 ● }, from: 0
23: {statement →  ● definition _}, from: 35
24: {statement →  ● js_block _}, from: 35
25: {statement →  ● query _}, from: 35
26: {definition →  ● %define __ signature __ body}, from: 35
27: {js_block →  ● %js}, from: 35
28: {query →  ● target where expression}, from: 35
29: {target →  ● %matches}, from: 35

Chart: 36
0: {_$ebnf$1 → _$ebnf$1 %ws ● }, from: 35
1: {__ → %ws ● }, from: 35
2: {_$ebnf$1 → _$ebnf$1 ● %ws}, from: 35
3: {_ → _$ebnf$1 ● }, from: 35
4: {and → __ ● %and __}, from: 35
5: {or → __ ● %or __}, from: 35
6: {sentence → sentence __ ● subject}, from: 31
7: {sentence → sentence __ ● %literal}, from: 31
8: {statement → definition _ ● }, from: 0
9: {expression → expression and term _ ● }, from: 21
10: {subject →  ● %someone}, from: 36
11: {subject →  ● %match}, from: 36
12: {subject →  ● %string}, from: 36
13: {subject →  ● %number}, from: 36
14: {subject →  ● param_ref}, from: 36
15: {start$ebnf$1 → statement ● }, from: 0
16: {expression → expression ● or term _}, from: 21
17: {expression → expression ● and term _}, from: 21
18: {body → %eq _ expression ● }, from: 18
19: {param_ref →  ● %dol %literal}, from: 36
20: {start$ebnf$1 → start$ebnf$1 ● statement}, from: 0
21: {start → start$ebnf$1 ● }, from: 0
22: {or →  ● __ %or __}, from: 36
23: {and →  ● __ %and __}, from: 36
24: {definition → %define __ signature __ body ● }, from: 0
25: {statement →  ● definition _}, from: 36
26: {statement →  ● js_block _}, from: 36
27: {statement →  ● query _}, from: 36
28: {__ →  ● %ws}, from: 36
29: {statement → definition ● _}, from: 0
30: {definition →  ● %define __ signature __ body}, from: 36
31: {js_block →  ● %js}, from: 36
32: {query →  ● target where expression}, from: 36
33: {_ →  ● _$ebnf$1}, from: 36
34: {target →  ● %matches}, from: 36
35: {_$ebnf$1 →  ● }, from: 36
36: {_$ebnf$1 →  ● _$ebnf$1 %ws}, from: 36
37: {_ → _$ebnf$1 ● }, from: 36
38: {_$ebnf$1 → _$ebnf$1 ● %ws}, from: 36
39: {statement → definition _ ● }, from: 0
40: {start$ebnf$1 → statement ● }, from: 0
41: {start$ebnf$1 → start$ebnf$1 ● statement}, from: 0
42: {start → start$ebnf$1 ● }, from: 0

Chart: 37
0: {param_ref → %dol ● %literal}, from: 36

Chart: 38
0: {param_ref → %dol %literal ● }, from: 36
1: {subject → param_ref ● }, from: 36
2: {sentence → sentence __ subject ● }, from: 31
3: {sentence → sentence ● __ %literal}, from: 31
4: {sentence → sentence ● __ subject}, from: 31
5: {term → sentence ● }, from: 31
6: {__ →  ● %ws}, from: 38
7: {expression → expression and term ● _}, from: 21
8: {_ →  ● _$ebnf$1}, from: 38
9: {_$ebnf$1 →  ● }, from: 38
10: {_$ebnf$1 →  ● _$ebnf$1 %ws}, from: 38
11: {_ → _$ebnf$1 ● }, from: 38
12: {_$ebnf$1 → _$ebnf$1 ● %ws}, from: 38
13: {expression → expression and term _ ● }, from: 21
14: {expression → expression ● or term _}, from: 21
15: {expression → expression ● and term _}, from: 21
16: {body → %eq _ expression ● }, from: 18
17: {or →  ● __ %or __}, from: 38
18: {and →  ● __ %and __}, from: 38
19: {definition → %define __ signature __ body ● }, from: 0
20: {statement → definition ● _}, from: 0
21: {statement → definition _ ● }, from: 0
22: {start$ebnf$1 → statement ● }, from: 0
23: {start$ebnf$1 → start$ebnf$1 ● statement}, from: 0
24: {start → start$ebnf$1 ● }, from: 0
25: {statement →  ● definition _}, from: 38
26: {statement →  ● js_block _}, from: 38
27: {statement →  ● query _}, from: 38
28: {definition →  ● %define __ signature __ body}, from: 38
29: {js_block →  ● %js}, from: 38
30: {query →  ● target where expression}, from: 38
31: {target →  ● %matches}, from: 38

Chart: 39
0: {_$ebnf$1 → _$ebnf$1 %ws ● }, from: 38
1: {__ → %ws ● }, from: 38
2: {_$ebnf$1 → _$ebnf$1 ● %ws}, from: 38
3: {_ → _$ebnf$1 ● }, from: 38
4: {and → __ ● %and __}, from: 38
5: {or → __ ● %or __}, from: 38
6: {sentence → sentence __ ● subject}, from: 31
7: {sentence → sentence __ ● %literal}, from: 31
8: {statement → definition _ ● }, from: 0
9: {expression → expression and term _ ● }, from: 21
10: {subject →  ● %someone}, from: 39
11: {subject →  ● %match}, from: 39
12: {subject →  ● %string}, from: 39
13: {subject →  ● %number}, from: 39
14: {subject →  ● param_ref}, from: 39
15: {start$ebnf$1 → statement ● }, from: 0
16: {expression → expression ● or term _}, from: 21
17: {expression → expression ● and term _}, from: 21
18: {body → %eq _ expression ● }, from: 18
19: {param_ref →  ● %dol %literal}, from: 39
20: {start$ebnf$1 → start$ebnf$1 ● statement}, from: 0
21: {start → start$ebnf$1 ● }, from: 0
22: {or →  ● __ %or __}, from: 39
23: {and →  ● __ %and __}, from: 39
24: {definition → %define __ signature __ body ● }, from: 0
25: {statement →  ● definition _}, from: 39
26: {statement →  ● js_block _}, from: 39
27: {statement →  ● query _}, from: 39
28: {__ →  ● %ws}, from: 39
29: {statement → definition ● _}, from: 0
30: {definition →  ● %define __ signature __ body}, from: 39
31: {js_block →  ● %js}, from: 39
32: {query →  ● target where expression}, from: 39
33: {_ →  ● _$ebnf$1}, from: 39
34: {target →  ● %matches}, from: 39
35: {_$ebnf$1 →  ● }, from: 39
36: {_$ebnf$1 →  ● _$ebnf$1 %ws}, from: 39
37: {_ → _$ebnf$1 ● }, from: 39
38: {_$ebnf$1 → _$ebnf$1 ● %ws}, from: 39
39: {statement → definition _ ● }, from: 0
40: {start$ebnf$1 → statement ● }, from: 0
41: {start$ebnf$1 → start$ebnf$1 ● statement}, from: 0
42: {start → start$ebnf$1 ● }, from: 0

Chart: 40
0: {_$ebnf$1 → _$ebnf$1 %ws ● }, from: 39
1: {__ → %ws ● }, from: 39
2: {_$ebnf$1 → _$ebnf$1 %ws ● }, from: 38
3: {_$ebnf$1 → _$ebnf$1 ● %ws}, from: 39
4: {_ → _$ebnf$1 ● }, from: 39
5: {and → __ ● %and __}, from: 39
6: {or → __ ● %or __}, from: 39
7: {_$ebnf$1 → _$ebnf$1 ● %ws}, from: 38
8: {_ → _$ebnf$1 ● }, from: 38
9: {statement → definition _ ● }, from: 0
10: {statement → definition _ ● }, from: 0
11: {expression → expression and term _ ● }, from: 21
12: {start$ebnf$1 → statement ● }, from: 0
13: {start$ebnf$1 → statement ● }, from: 0
14: {expression → expression ● or term _}, from: 21
15: {expression → expression ● and term _}, from: 21
16: {body → %eq _ expression ● }, from: 18
17: {start$ebnf$1 → start$ebnf$1 ● statement}, from: 0
18: {start → start$ebnf$1 ● }, from: 0
19: {start$ebnf$1 → start$ebnf$1 ● statement}, from: 0
20: {start → start$ebnf$1 ● }, from: 0
21: {or →  ● __ %or __}, from: 40
22: {and →  ● __ %and __}, from: 40
23: {definition → %define __ signature __ body ● }, from: 0
24: {statement →  ● definition _}, from: 40
25: {statement →  ● js_block _}, from: 40
26: {statement →  ● query _}, from: 40
27: {__ →  ● %ws}, from: 40
28: {statement → definition ● _}, from: 0
29: {definition →  ● %define __ signature __ body}, from: 40
30: {js_block →  ● %js}, from: 40
31: {query →  ● target where expression}, from: 40
32: {_ →  ● _$ebnf$1}, from: 40
33: {target →  ● %matches}, from: 40
34: {_$ebnf$1 →  ● }, from: 40
35: {_$ebnf$1 →  ● _$ebnf$1 %ws}, from: 40
36: {_ → _$ebnf$1 ● }, from: 40
37: {_$ebnf$1 → _$ebnf$1 ● %ws}, from: 40
38: {statement → definition _ ● }, from: 0
39: {start$ebnf$1 → statement ● }, from: 0
40: {start$ebnf$1 → start$ebnf$1 ● statement}, from: 0
41: {start → start$ebnf$1 ● }, from: 0

Chart: 41
0: {target → %matches ● }, from: 40
1: {query → target ● where expression}, from: 40
2: {where →  ● __ %where __}, from: 41
3: {__ →  ● %ws}, from: 41

Chart: 42
0: {__ → %ws ● }, from: 41
1: {where → __ ● %where __}, from: 41

Chart: 43
0: {where → __ %where ● __}, from: 41
1: {__ →  ● %ws}, from: 43

Chart: 44
0: {__ → %ws ● }, from: 43
1: {where → __ %where __ ● }, from: 41
2: {query → target where ● expression}, from: 40
3: {expression →  ● expression and term _}, from: 44
4: {expression →  ● expression or term _}, from: 44
5: {expression →  ● not expression _}, from: 44
6: {expression →  ● term _}, from: 44
7: {not →  ● __ %not __}, from: 44
8: {term →  ● sentence}, from: 44
9: {term →  ● function_call}, from: 44
10: {term →  ● %lp _ expression _ %rp}, from: 44
11: {__ →  ● %ws}, from: 44
12: {sentence →  ● sentence __ subject}, from: 44
13: {sentence →  ● sentence __ %literal}, from: 44
14: {sentence →  ● subject __ %literal}, from: 44
15: {sentence →  ● %literal __ subject}, from: 44
16: {function_call →  ● %literal %lp param_values %rp}, from: 44
17: {subject →  ● %someone}, from: 44
18: {subject →  ● %match}, from: 44
19: {subject →  ● %string}, from: 44
20: {subject →  ● %number}, from: 44
21: {subject →  ● param_ref}, from: 44
22: {param_ref →  ● %dol %literal}, from: 44

Chart: 45
0: {subject → %string ● }, from: 44
1: {sentence → subject ● __ %literal}, from: 44
2: {__ →  ● %ws}, from: 45

Chart: 46
0: {__ → %ws ● }, from: 45
1: {sentence → subject __ ● %literal}, from: 44

Chart: 47
0: {sentence → subject __ %literal ● }, from: 44
1: {sentence → sentence ● __ %literal}, from: 44
2: {sentence → sentence ● __ subject}, from: 44
3: {term → sentence ● }, from: 44
4: {__ →  ● %ws}, from: 47
5: {expression → term ● _}, from: 44
6: {_ →  ● _$ebnf$1}, from: 47
7: {_$ebnf$1 →  ● }, from: 47
8: {_$ebnf$1 →  ● _$ebnf$1 %ws}, from: 47
9: {_ → _$ebnf$1 ● }, from: 47
10: {_$ebnf$1 → _$ebnf$1 ● %ws}, from: 47
11: {expression → term _ ● }, from: 44
12: {expression → expression ● or term _}, from: 44
13: {expression → expression ● and term _}, from: 44
14: {query → target where expression ● }, from: 40
15: {or →  ● __ %or __}, from: 47
16: {and →  ● __ %and __}, from: 47
17: {statement → query ● _}, from: 40
18: {statement → query _ ● }, from: 40
19: {start$ebnf$1 → start$ebnf$1 statement ● }, from: 0
20: {start$ebnf$1 → start$ebnf$1 statement ● }, from: 0
21: {start$ebnf$1 → start$ebnf$1 statement ● }, from: 0
22: {start$ebnf$1 → start$ebnf$1 ● statement}, from: 0
23: {start → start$ebnf$1 ● }, from: 0
24: {start$ebnf$1 → start$ebnf$1 ● statement}, from: 0
25: {start → start$ebnf$1 ● }, from: 0
26: {start$ebnf$1 → start$ebnf$1 ● statement}, from: 0
27: {start → start$ebnf$1 ● }, from: 0
28: {statement →  ● definition _}, from: 47
29: {statement →  ● js_block _}, from: 47
30: {statement →  ● query _}, from: 47
31: {definition →  ● %define __ signature __ body}, from: 47
32: {js_block →  ● %js}, from: 47
33: {query →  ● target where expression}, from: 47
34: {target →  ● %matches}, from: 47

Chart: 48
0: {_$ebnf$1 → _$ebnf$1 %ws ● }, from: 47
1: {__ → %ws ● }, from: 47
2: {_$ebnf$1 → _$ebnf$1 ● %ws}, from: 47
3: {_ → _$ebnf$1 ● }, from: 47
4: {and → __ ● %and __}, from: 47
5: {or → __ ● %or __}, from: 47
6: {sentence → sentence __ ● subject}, from: 44
7: {sentence → sentence __ ● %literal}, from: 44
8: {statement → query _ ● }, from: 40
9: {expression → term _ ● }, from: 44
10: {subject →  ● %someone}, from: 48
11: {subject →  ● %match}, from: 48
12: {subject →  ● %string}, from: 48
13: {subject →  ● %number}, from: 48
14: {subject →  ● param_ref}, from: 48
15: {start$ebnf$1 → start$ebnf$1 statement ● }, from: 0
16: {start$ebnf$1 → start$ebnf$1 statement ● }, from: 0
17: {start$ebnf$1 → start$ebnf$1 statement ● }, from: 0
18: {expression → expression ● or term _}, from: 44
19: {expression → expression ● and term _}, from: 44
20: {query → target where expression ● }, from: 40
21: {param_ref →  ● %dol %literal}, from: 48
22: {start$ebnf$1 → start$ebnf$1 ● statement}, from: 0
23: {start → start$ebnf$1 ● }, from: 0
24: {start$ebnf$1 → start$ebnf$1 ● statement}, from: 0
25: {start → start$ebnf$1 ● }, from: 0
26: {start$ebnf$1 → start$ebnf$1 ● statement}, from: 0
27: {start → start$ebnf$1 ● }, from: 0
28: {or →  ● __ %or __}, from: 48
29: {and →  ● __ %and __}, from: 48
30: {statement → query ● _}, from: 40
31: {statement →  ● definition _}, from: 48
32: {statement →  ● js_block _}, from: 48
33: {statement →  ● query _}, from: 48
34: {__ →  ● %ws}, from: 48
35: {_ →  ● _$ebnf$1}, from: 48
36: {definition →  ● %define __ signature __ body}, from: 48
37: {js_block →  ● %js}, from: 48
38: {query →  ● target where expression}, from: 48
39: {_$ebnf$1 →  ● }, from: 48
40: {_$ebnf$1 →  ● _$ebnf$1 %ws}, from: 48
41: {target →  ● %matches}, from: 48
42: {_ → _$ebnf$1 ● }, from: 48
43: {_$ebnf$1 → _$ebnf$1 ● %ws}, from: 48
44: {statement → query _ ● }, from: 40
45: {start$ebnf$1 → start$ebnf$1 statement ● }, from: 0
46: {start$ebnf$1 → start$ebnf$1 statement ● }, from: 0
47: {start$ebnf$1 → start$ebnf$1 statement ● }, from: 0
48: {start$ebnf$1 → start$ebnf$1 ● statement}, from: 0
49: {start → start$ebnf$1 ● }, from: 0
50: {start$ebnf$1 → start$ebnf$1 ● statement}, from: 0
51: {start → start$ebnf$1 ● }, from: 0
52: {start$ebnf$1 → start$ebnf$1 ● statement}, from: 0
53: {start → start$ebnf$1 ● }, from: 0

Chart: 49
0: {subject → %string ● }, from: 48
1: {sentence → sentence __ subject ● }, from: 44
2: {sentence → sentence ● __ %literal}, from: 44
3: {sentence → sentence ● __ subject}, from: 44
4: {term → sentence ● }, from: 44
5: {__ →  ● %ws}, from: 49
6: {expression → term ● _}, from: 44
7: {_ →  ● _$ebnf$1}, from: 49
8: {_$ebnf$1 →  ● }, from: 49
9: {_$ebnf$1 →  ● _$ebnf$1 %ws}, from: 49
10: {_ → _$ebnf$1 ● }, from: 49
11: {_$ebnf$1 → _$ebnf$1 ● %ws}, from: 49
12: {expression → term _ ● }, from: 44
13: {expression → expression ● or term _}, from: 44
14: {expression → expression ● and term _}, from: 44
15: {query → target where expression ● }, from: 40
16: {or →  ● __ %or __}, from: 49
17: {and →  ● __ %and __}, from: 49
18: {statement → query ● _}, from: 40
19: {statement → query _ ● }, from: 40
20: {start$ebnf$1 → start$ebnf$1 statement ● }, from: 0
21: {start$ebnf$1 → start$ebnf$1 statement ● }, from: 0
22: {start$ebnf$1 → start$ebnf$1 statement ● }, from: 0
23: {start$ebnf$1 → start$ebnf$1 ● statement}, from: 0
24: {start → start$ebnf$1 ● }, from: 0
25: {start$ebnf$1 → start$ebnf$1 ● statement}, from: 0
26: {start → start$ebnf$1 ● }, from: 0
27: {start$ebnf$1 → start$ebnf$1 ● statement}, from: 0
28: {start → start$ebnf$1 ● }, from: 0
29: {statement →  ● definition _}, from: 49
30: {statement →  ● js_block _}, from: 49
31: {statement →  ● query _}, from: 49
32: {definition →  ● %define __ signature __ body}, from: 49
33: {js_block →  ● %js}, from: 49
34: {query →  ● target where expression}, from: 49
35: {target →  ● %matches}, from: 49

Chart: 50
0: {_$ebnf$1 → _$ebnf$1 %ws ● }, from: 49
1: {__ → %ws ● }, from: 49
2: {_$ebnf$1 → _$ebnf$1 ● %ws}, from: 49
3: {_ → _$ebnf$1 ● }, from: 49
4: {and → __ ● %and __}, from: 49
5: {or → __ ● %or __}, from: 49
6: {sentence → sentence __ ● subject}, from: 44
7: {sentence → sentence __ ● %literal}, from: 44
8: {statement → query _ ● }, from: 40
9: {expression → term _ ● }, from: 44
10: {subject →  ● %someone}, from: 50
11: {subject →  ● %match}, from: 50
12: {subject →  ● %string}, from: 50
13: {subject →  ● %number}, from: 50
14: {subject →  ● param_ref}, from: 50
15: {start$ebnf$1 → start$ebnf$1 statement ● }, from: 0
16: {start$ebnf$1 → start$ebnf$1 statement ● }, from: 0
17: {start$ebnf$1 → start$ebnf$1 statement ● }, from: 0
18: {expression → expression ● or term _}, from: 44
19: {expression → expression ● and term _}, from: 44
20: {query → target where expression ● }, from: 40
21: {param_ref →  ● %dol %literal}, from: 50
22: {start$ebnf$1 → start$ebnf$1 ● statement}, from: 0
23: {start → start$ebnf$1 ● }, from: 0
24: {start$ebnf$1 → start$ebnf$1 ● statement}, from: 0
25: {start → start$ebnf$1 ● }, from: 0
26: {start$ebnf$1 → start$ebnf$1 ● statement}, from: 0
27: {start → start$ebnf$1 ● }, from: 0
28: {or →  ● __ %or __}, from: 50
29: {and →  ● __ %and __}, from: 50
30: {statement → query ● _}, from: 40
31: {statement →  ● definition _}, from: 50
32: {statement →  ● js_block _}, from: 50
33: {statement →  ● query _}, from: 50
34: {__ →  ● %ws}, from: 50
35: {_ →  ● _$ebnf$1}, from: 50
36: {definition →  ● %define __ signature __ body}, from: 50
37: {js_block →  ● %js}, from: 50
38: {query →  ● target where expression}, from: 50
39: {_$ebnf$1 →  ● }, from: 50
40: {_$ebnf$1 →  ● _$ebnf$1 %ws}, from: 50
41: {target →  ● %matches}, from: 50
42: {_ → _$ebnf$1 ● }, from: 50
43: {_$ebnf$1 → _$ebnf$1 ● %ws}, from: 50
44: {statement → query _ ● }, from: 40
45: {start$ebnf$1 → start$ebnf$1 statement ● }, from: 0
46: {start$ebnf$1 → start$ebnf$1 statement ● }, from: 0
47: {start$ebnf$1 → start$ebnf$1 statement ● }, from: 0
48: {start$ebnf$1 → start$ebnf$1 ● statement}, from: 0
49: {start → start$ebnf$1 ● }, from: 0
50: {start$ebnf$1 → start$ebnf$1 ● statement}, from: 0
51: {start → start$ebnf$1 ● }, from: 0
52: {start$ebnf$1 → start$ebnf$1 ● statement}, from: 0
53: {start → start$ebnf$1 ● }, from: 0

Chart: 51
0: {sentence → sentence __ %literal ● }, from: 44
1: {sentence → sentence ● __ %literal}, from: 44
2: {sentence → sentence ● __ subject}, from: 44
3: {term → sentence ● }, from: 44
4: {__ →  ● %ws}, from: 51
5: {expression → term ● _}, from: 44
6: {_ →  ● _$ebnf$1}, from: 51
7: {_$ebnf$1 →  ● }, from: 51
8: {_$ebnf$1 →  ● _$ebnf$1 %ws}, from: 51
9: {_ → _$ebnf$1 ● }, from: 51
10: {_$ebnf$1 → _$ebnf$1 ● %ws}, from: 51
11: {expression → term _ ● }, from: 44
12: {expression → expression ● or term _}, from: 44
13: {expression → expression ● and term _}, from: 44
14: {query → target where expression ● }, from: 40
15: {or →  ● __ %or __}, from: 51
16: {and →  ● __ %and __}, from: 51
17: {statement → query ● _}, from: 40
18: {statement → query _ ● }, from: 40
19: {start$ebnf$1 → start$ebnf$1 statement ● }, from: 0
20: {start$ebnf$1 → start$ebnf$1 statement ● }, from: 0
21: {start$ebnf$1 → start$ebnf$1 statement ● }, from: 0
22: {start$ebnf$1 → start$ebnf$1 ● statement}, from: 0
23: {start → start$ebnf$1 ● }, from: 0
24: {start$ebnf$1 → start$ebnf$1 ● statement}, from: 0
25: {start → start$ebnf$1 ● }, from: 0
26: {start$ebnf$1 → start$ebnf$1 ● statement}, from: 0
27: {start → start$ebnf$1 ● }, from: 0
28: {statement →  ● definition _}, from: 51
29: {statement →  ● js_block _}, from: 51
30: {statement →  ● query _}, from: 51
31: {definition →  ● %define __ signature __ body}, from: 51
32: {js_block →  ● %js}, from: 51
33: {query →  ● target where expression}, from: 51
34: {target →  ● %matches}, from: 51

Chart: 52
0: {_$ebnf$1 → _$ebnf$1 %ws ● }, from: 51
1: {__ → %ws ● }, from: 51
2: {_$ebnf$1 → _$ebnf$1 ● %ws}, from: 51
3: {_ → _$ebnf$1 ● }, from: 51
4: {and → __ ● %and __}, from: 51
5: {or → __ ● %or __}, from: 51
6: {sentence → sentence __ ● subject}, from: 44
7: {sentence → sentence __ ● %literal}, from: 44
8: {statement → query _ ● }, from: 40
9: {expression → term _ ● }, from: 44
10: {subject →  ● %someone}, from: 52
11: {subject →  ● %match}, from: 52
12: {subject →  ● %string}, from: 52
13: {subject →  ● %number}, from: 52
14: {subject →  ● param_ref}, from: 52
15: {start$ebnf$1 → start$ebnf$1 statement ● }, from: 0
16: {start$ebnf$1 → start$ebnf$1 statement ● }, from: 0
17: {start$ebnf$1 → start$ebnf$1 statement ● }, from: 0
18: {expression → expression ● or term _}, from: 44
19: {expression → expression ● and term _}, from: 44
20: {query → target where expression ● }, from: 40
21: {param_ref →  ● %dol %literal}, from: 52
22: {start$ebnf$1 → start$ebnf$1 ● statement}, from: 0
23: {start → start$ebnf$1 ● }, from: 0
24: {start$ebnf$1 → start$ebnf$1 ● statement}, from: 0
25: {start → start$ebnf$1 ● }, from: 0
26: {start$ebnf$1 → start$ebnf$1 ● statement}, from: 0
27: {start → start$ebnf$1 ● }, from: 0
28: {or →  ● __ %or __}, from: 52
29: {and →  ● __ %and __}, from: 52
30: {statement → query ● _}, from: 40
31: {statement →  ● definition _}, from: 52
32: {statement →  ● js_block _}, from: 52
33: {statement →  ● query _}, from: 52
34: {__ →  ● %ws}, from: 52
35: {_ →  ● _$ebnf$1}, from: 52
36: {definition →  ● %define __ signature __ body}, from: 52
37: {js_block →  ● %js}, from: 52
38: {query →  ● target where expression}, from: 52
39: {_$ebnf$1 →  ● }, from: 52
40: {_$ebnf$1 →  ● _$ebnf$1 %ws}, from: 52
41: {target →  ● %matches}, from: 52
42: {_ → _$ebnf$1 ● }, from: 52
43: {_$ebnf$1 → _$ebnf$1 ● %ws}, from: 52
44: {statement → query _ ● }, from: 40
45: {start$ebnf$1 → start$ebnf$1 statement ● }, from: 0
46: {start$ebnf$1 → start$ebnf$1 statement ● }, from: 0
47: {start$ebnf$1 → start$ebnf$1 statement ● }, from: 0
48: {start$ebnf$1 → start$ebnf$1 ● statement}, from: 0
49: {start → start$ebnf$1 ● }, from: 0
50: {start$ebnf$1 → start$ebnf$1 ● statement}, from: 0
51: {start → start$ebnf$1 ● }, from: 0
52: {start$ebnf$1 → start$ebnf$1 ● statement}, from: 0
53: {start → start$ebnf$1 ● }, from: 0

Chart: 53
0: {subject → %string ● }, from: 52
1: {sentence → sentence __ subject ● }, from: 44
2: {sentence → sentence ● __ %literal}, from: 44
3: {sentence → sentence ● __ subject}, from: 44
4: {term → sentence ● }, from: 44
5: {__ →  ● %ws}, from: 53
6: {expression → term ● _}, from: 44
7: {_ →  ● _$ebnf$1}, from: 53
8: {_$ebnf$1 →  ● }, from: 53
9: {_$ebnf$1 →  ● _$ebnf$1 %ws}, from: 53
10: {_ → _$ebnf$1 ● }, from: 53
11: {_$ebnf$1 → _$ebnf$1 ● %ws}, from: 53
12: {expression → term _ ● }, from: 44
13: {expression → expression ● or term _}, from: 44
14: {expression → expression ● and term _}, from: 44
15: {query → target where expression ● }, from: 40
16: {or →  ● __ %or __}, from: 53
17: {and →  ● __ %and __}, from: 53
18: {statement → query ● _}, from: 40
19: {statement → query _ ● }, from: 40
20: {start$ebnf$1 → start$ebnf$1 statement ● }, from: 0
21: {start$ebnf$1 → start$ebnf$1 statement ● }, from: 0
22: {start$ebnf$1 → start$ebnf$1 statement ● }, from: 0
23: {start$ebnf$1 → start$ebnf$1 ● statement}, from: 0
24: {start → start$ebnf$1 ● }, from: 0
25: {start$ebnf$1 → start$ebnf$1 ● statement}, from: 0
26: {start → start$ebnf$1 ● }, from: 0
27: {start$ebnf$1 → start$ebnf$1 ● statement}, from: 0
28: {start → start$ebnf$1 ● }, from: 0
29: {statement →  ● definition _}, from: 53
30: {statement →  ● js_block _}, from: 53
31: {statement →  ● query _}, from: 53
32: {definition →  ● %define __ signature __ body}, from: 53
33: {js_block →  ● %js}, from: 53
34: {query →  ● target where expression}, from: 53
35: {target →  ● %matches}, from: 53


Parse results: 
[
  [
    [
      {
        type: [32m'definition'[39m,
        signature: [
          {
            op: {
              type: [32m'co'[39m,
              value: [32m':'[39m,
              text: [32m':'[39m,
              toString: [36m[Function: tokenToString][39m,
              offset: [33m13[39m,
              lineBreaks: [33m0[39m,
              line: [33m1[39m,
              col: [33m14[39m
            },
            lval: {
              type: [32m'literal'[39m,
              value: [32m'hitter'[39m,
              text: [32m'hitter'[39m,
              toString: [36m[Function: tokenToString][39m,
              offset: [33m7[39m,
              lineBreaks: [33m0[39m,
              line: [33m1[39m,
              col: [33m8[39m
            },
            rval: {
              type: [32m'player'[39m,
              value: [32m'player'[39m,
              text: [32m'player'[39m,
              toString: [36m[Function: tokenToString][39m,
              offset: [33m14[39m,
              lineBreaks: [33m0[39m,
              line: [33m1[39m,
              col: [33m15[39m
            }
          },
          {
            type: [32m'literal'[39m,
            value: [32m'hits'[39m,
            text: [32m'hits'[39m,
            toString: [36m[Function: tokenToString][39m,
            offset: [33m21[39m,
            lineBreaks: [33m0[39m,
            line: [33m1[39m,
            col: [33m22[39m
          },
          {
            op: {
              type: [32m'co'[39m,
              value: [32m':'[39m,
              text: [32m':'[39m,
              toString: [36m[Function: tokenToString][39m,
              offset: [33m29[39m,
              lineBreaks: [33m0[39m,
              line: [33m1[39m,
              col: [33m30[39m
            },
            lval: {
              type: [32m'literal'[39m,
              value: [32m'rec'[39m,
              text: [32m'rec'[39m,
              toString: [36m[Function: tokenToString][39m,
              offset: [33m26[39m,
              lineBreaks: [33m0[39m,
              line: [33m1[39m,
              col: [33m27[39m
            },
            rval: {
              type: [32m'player'[39m,
              value: [32m'player'[39m,
              text: [32m'player'[39m,
              toString: [36m[Function: tokenToString][39m,
              offset: [33m30[39m,
              lineBreaks: [33m0[39m,
              line: [33m1[39m,
              col: [33m31[39m
            }
          },
          {
            type: [32m'literal'[39m,
            value: [32m'with'[39m,
            text: [32m'with'[39m,
            toString: [36m[Function: tokenToString][39m,
            offset: [33m37[39m,
            lineBreaks: [33m0[39m,
            line: [33m1[39m,
            col: [33m38[39m
          },
          {
            op: {
              type: [32m'co'[39m,
              value: [32m':'[39m,
              text: [32m':'[39m,
              toString: [36m[Function: tokenToString][39m,
              offset: [33m45[39m,
              lineBreaks: [33m0[39m,
              line: [33m1[39m,
              col: [33m46[39m
            },
            lval: {
              type: [32m'literal'[39m,
              value: [32m'att'[39m,
              text: [32m'att'[39m,
              toString: [36m[Function: tokenToString][39m,
              offset: [33m42[39m,
              lineBreaks: [33m0[39m,
              line: [33m1[39m,
              col: [33m43[39m
            },
            rval: {
              type: [32m'attack'[39m,
              value: [32m'attack'[39m,
              text: [32m'attack'[39m,
              toString: [36m[Function: tokenToString][39m,
              offset: [33m46[39m,
              lineBreaks: [33m0[39m,
              line: [33m1[39m,
              col: [33m47[39m
            }
          }
        ],
        body: {
          op: {
            type: [32m'and'[39m,
            value: [32m'and'[39m,
            text: [32m'and'[39m,
            toString: [36m[Function: tokenToString][39m,
            offset: [33m23[39m,
            lineBreaks: [33m0[39m,
            line: [33m2[39m,
            col: [33m24[39m
          },
          lval: [
            [
              {
                type: [32m'ref'[39m,
                name: {
                  type: [32m'literal'[39m,
                  value: [32m'hitter'[39m,
                  text: [32m'hitter'[39m,
                  toString: [36m[Function: tokenToString][39m,
                  offset: [33m2[39m,
                  lineBreaks: [33m0[39m,
                  line: [33m2[39m,
                  col: [33m3[39m
                }
              },
              {
                type: [32m'literal'[39m,
                value: [32m'performs'[39m,
                text: [32m'performs'[39m,
                toString: [36m[Function: tokenToString][39m,
                offset: [33m9[39m,
                lineBreaks: [33m0[39m,
                line: [33m2[39m,
                col: [33m10[39m
              },
              {
                type: [32m'ref'[39m,
                name: {
                  type: [32m'literal'[39m,
                  value: [32m'att'[39m,
                  text: [32m'att'[39m,
                  toString: [36m[Function: tokenToString][39m,
                  offset: [33m19[39m,
                  lineBreaks: [33m0[39m,
                  line: [33m2[39m,
                  col: [33m20[39m
                }
              }
            ]
          ],
          rval: [
            [
              {
                type: [32m'ref'[39m,
                name: {
                  type: [32m'literal'[39m,
                  value: [32m'rec'[39m,
                  text: [32m'rec'[39m,
                  toString: [36m[Function: tokenToString][39m,
                  offset: [33m28[39m,
                  lineBreaks: [33m0[39m,
                  line: [33m2[39m,
                  col: [33m29[39m
                }
              },
              {
                type: [32m'literal'[39m,
                value: [32m'receives'[39m,
                text: [32m'receives'[39m,
                toString: [36m[Function: tokenToString][39m,
                offset: [33m32[39m,
                lineBreaks: [33m0[39m,
                line: [33m2[39m,
                col: [33m33[39m
              },
              {
                type: [32m'ref'[39m,
                name: {
                  type: [32m'literal'[39m,
                  value: [32m'att'[39m,
                  text: [32m'att'[39m,
                  toString: [36m[Function: tokenToString][39m,
                  offset: [33m42[39m,
                  lineBreaks: [33m0[39m,
                  line: [33m2[39m,
                  col: [33m43[39m
                }
              }
            ]
          ]
        }
      },
      {
        target: [
          {
            type: [32m'matches'[39m,
            value: [32m'matches'[39m,
            text: [32m'matches'[39m,
            toString: [36m[Function: tokenToString][39m,
            offset: [33m0[39m,
            lineBreaks: [33m0[39m,
            line: [33m4[39m,
            col: [33m1[39m
          }
        ],
        expr: [
          [
            {
              type: [32m'string'[39m,
              value: [32m'"aslo"'[39m,
              text: [32m'"aslo"'[39m,
              toString: [36m[Function: tokenToString][39m,
              offset: [33m14[39m,
              lineBreaks: [33m0[39m,
              line: [33m4[39m,
              col: [33m15[39m
            },
            {
              type: [32m'literal'[39m,
              value: [32m'hits'[39m,
              text: [32m'hits'[39m,
              toString: [36m[Function: tokenToString][39m,
              offset: [33m21[39m,
              lineBreaks: [33m0[39m,
              line: [33m4[39m,
              col: [33m22[39m
            },
            {
              type: [32m'string'[39m,
              value: [32m'"eibol"'[39m,
              text: [32m'"eibol"'[39m,
              toString: [36m[Function: tokenToString][39m,
              offset: [33m26[39m,
              lineBreaks: [33m0[39m,
              line: [33m4[39m,
              col: [33m27[39m
            },
            {
              type: [32m'literal'[39m,
              value: [32m'with'[39m,
              text: [32m'with'[39m,
              toString: [36m[Function: tokenToString][39m,
              offset: [33m34[39m,
              lineBreaks: [33m0[39m,
              line: [33m4[39m,
              col: [33m35[39m
            },
            {
              type: [32m'string'[39m,
              value: [32m'"fair"'[39m,
              text: [32m'"fair"'[39m,
              toString: [36m[Function: tokenToString][39m,
              offset: [33m39[39m,
              lineBreaks: [33m0[39m,
              line: [33m4[39m,
              col: [33m40[39m
            }
          ]
        ]
      }
    ]
  ],
  [
    [
      {
        type: [32m'definition'[39m,
        signature: [
          {
            op: {
              type: [32m'co'[39m,
              value: [32m':'[39m,
              text: [32m':'[39m,
              toString: [36m[Function: tokenToString][39m,
              offset: [33m13[39m,
              lineBreaks: [33m0[39m,
              line: [33m1[39m,
              col: [33m14[39m
            },
            lval: {
              type: [32m'literal'[39m,
              value: [32m'hitter'[39m,
              text: [32m'hitter'[39m,
              toString: [36m[Function: tokenToString][39m,
              offset: [33m7[39m,
              lineBreaks: [33m0[39m,
              line: [33m1[39m,
              col: [33m8[39m
            },
            rval: {
              type: [32m'player'[39m,
              value: [32m'player'[39m,
              text: [32m'player'[39m,
              toString: [36m[Function: tokenToString][39m,
              offset: [33m14[39m,
              lineBreaks: [33m0[39m,
              line: [33m1[39m,
              col: [33m15[39m
            }
          },
          {
            type: [32m'literal'[39m,
            value: [32m'hits'[39m,
            text: [32m'hits'[39m,
            toString: [36m[Function: tokenToString][39m,
            offset: [33m21[39m,
            lineBreaks: [33m0[39m,
            line: [33m1[39m,
            col: [33m22[39m
          },
          {
            op: {
              type: [32m'co'[39m,
              value: [32m':'[39m,
              text: [32m':'[39m,
              toString: [36m[Function: tokenToString][39m,
              offset: [33m29[39m,
              lineBreaks: [33m0[39m,
              line: [33m1[39m,
              col: [33m30[39m
            },
            lval: {
              type: [32m'literal'[39m,
              value: [32m'rec'[39m,
              text: [32m'rec'[39m,
              toString: [36m[Function: tokenToString][39m,
              offset: [33m26[39m,
              lineBreaks: [33m0[39m,
              line: [33m1[39m,
              col: [33m27[39m
            },
            rval: {
              type: [32m'player'[39m,
              value: [32m'player'[39m,
              text: [32m'player'[39m,
              toString: [36m[Function: tokenToString][39m,
              offset: [33m30[39m,
              lineBreaks: [33m0[39m,
              line: [33m1[39m,
              col: [33m31[39m
            }
          },
          {
            type: [32m'literal'[39m,
            value: [32m'with'[39m,
            text: [32m'with'[39m,
            toString: [36m[Function: tokenToString][39m,
            offset: [33m37[39m,
            lineBreaks: [33m0[39m,
            line: [33m1[39m,
            col: [33m38[39m
          },
          {
            op: {
              type: [32m'co'[39m,
              value: [32m':'[39m,
              text: [32m':'[39m,
              toString: [36m[Function: tokenToString][39m,
              offset: [33m45[39m,
              lineBreaks: [33m0[39m,
              line: [33m1[39m,
              col: [33m46[39m
            },
            lval: {
              type: [32m'literal'[39m,
              value: [32m'att'[39m,
              text: [32m'att'[39m,
              toString: [36m[Function: tokenToString][39m,
              offset: [33m42[39m,
              lineBreaks: [33m0[39m,
              line: [33m1[39m,
              col: [33m43[39m
            },
            rval: {
              type: [32m'attack'[39m,
              value: [32m'attack'[39m,
              text: [32m'attack'[39m,
              toString: [36m[Function: tokenToString][39m,
              offset: [33m46[39m,
              lineBreaks: [33m0[39m,
              line: [33m1[39m,
              col: [33m47[39m
            }
          }
        ],
        body: {
          op: {
            type: [32m'and'[39m,
            value: [32m'and'[39m,
            text: [32m'and'[39m,
            toString: [36m[Function: tokenToString][39m,
            offset: [33m23[39m,
            lineBreaks: [33m0[39m,
            line: [33m2[39m,
            col: [33m24[39m
          },
          lval: [
            [
              {
                type: [32m'ref'[39m,
                name: {
                  type: [32m'literal'[39m,
                  value: [32m'hitter'[39m,
                  text: [32m'hitter'[39m,
                  toString: [36m[Function: tokenToString][39m,
                  offset: [33m2[39m,
                  lineBreaks: [33m0[39m,
                  line: [33m2[39m,
                  col: [33m3[39m
                }
              },
              {
                type: [32m'literal'[39m,
                value: [32m'performs'[39m,
                text: [32m'performs'[39m,
                toString: [36m[Function: tokenToString][39m,
                offset: [33m9[39m,
                lineBreaks: [33m0[39m,
                line: [33m2[39m,
                col: [33m10[39m
              },
              {
                type: [32m'ref'[39m,
                name: {
                  type: [32m'literal'[39m,
                  value: [32m'att'[39m,
                  text: [32m'att'[39m,
                  toString: [36m[Function: tokenToString][39m,
                  offset: [33m19[39m,
                  lineBreaks: [33m0[39m,
                  line: [33m2[39m,
                  col: [33m20[39m
                }
              }
            ]
          ],
          rval: [
            [
              {
                type: [32m'ref'[39m,
                name: {
                  type: [32m'literal'[39m,
                  value: [32m'rec'[39m,
                  text: [32m'rec'[39m,
                  toString: [36m[Function: tokenToString][39m,
                  offset: [33m28[39m,
                  lineBreaks: [33m0[39m,
                  line: [33m2[39m,
                  col: [33m29[39m
                }
              },
              {
                type: [32m'literal'[39m,
                value: [32m'receives'[39m,
                text: [32m'receives'[39m,
                toString: [36m[Function: tokenToString][39m,
                offset: [33m32[39m,
                lineBreaks: [33m0[39m,
                line: [33m2[39m,
                col: [33m33[39m
              },
              {
                type: [32m'ref'[39m,
                name: {
                  type: [32m'literal'[39m,
                  value: [32m'att'[39m,
                  text: [32m'att'[39m,
                  toString: [36m[Function: tokenToString][39m,
                  offset: [33m42[39m,
                  lineBreaks: [33m0[39m,
                  line: [33m2[39m,
                  col: [33m43[39m
                }
              }
            ]
          ]
        }
      },
      {
        target: [
          {
            type: [32m'matches'[39m,
            value: [32m'matches'[39m,
            text: [32m'matches'[39m,
            toString: [36m[Function: tokenToString][39m,
            offset: [33m0[39m,
            lineBreaks: [33m0[39m,
            line: [33m4[39m,
            col: [33m1[39m
          }
        ],
        expr: [
          [
            {
              type: [32m'string'[39m,
              value: [32m'"aslo"'[39m,
              text: [32m'"aslo"'[39m,
              toString: [36m[Function: tokenToString][39m,
              offset: [33m14[39m,
              lineBreaks: [33m0[39m,
              line: [33m4[39m,
              col: [33m15[39m
            },
            {
              type: [32m'literal'[39m,
              value: [32m'hits'[39m,
              text: [32m'hits'[39m,
              toString: [36m[Function: tokenToString][39m,
              offset: [33m21[39m,
              lineBreaks: [33m0[39m,
              line: [33m4[39m,
              col: [33m22[39m
            },
            {
              type: [32m'string'[39m,
              value: [32m'"eibol"'[39m,
              text: [32m'"eibol"'[39m,
              toString: [36m[Function: tokenToString][39m,
              offset: [33m26[39m,
              lineBreaks: [33m0[39m,
              line: [33m4[39m,
              col: [33m27[39m
            },
            {
              type: [32m'literal'[39m,
              value: [32m'with'[39m,
              text: [32m'with'[39m,
              toString: [36m[Function: tokenToString][39m,
              offset: [33m34[39m,
              lineBreaks: [33m0[39m,
              line: [33m4[39m,
              col: [33m35[39m
            },
            {
              type: [32m'string'[39m,
              value: [32m'"fair"'[39m,
              text: [32m'"fair"'[39m,
              toString: [36m[Function: tokenToString][39m,
              offset: [33m39[39m,
              lineBreaks: [33m0[39m,
              line: [33m4[39m,
              col: [33m40[39m
            }
          ]
        ]
      }
    ]
  ],
  [
    [
      {
        type: [32m'definition'[39m,
        signature: [
          {
            op: {
              type: [32m'co'[39m,
              value: [32m':'[39m,
              text: [32m':'[39m,
              toString: [36m[Function: tokenToString][39m,
              offset: [33m13[39m,
              lineBreaks: [33m0[39m,
              line: [33m1[39m,
              col: [33m14[39m
            },
            lval: {
              type: [32m'literal'[39m,
              value: [32m'hitter'[39m,
              text: [32m'hitter'[39m,
              toString: [36m[Function: tokenToString][39m,
              offset: [33m7[39m,
              lineBreaks: [33m0[39m,
              line: [33m1[39m,
              col: [33m8[39m
            },
            rval: {
              type: [32m'player'[39m,
              value: [32m'player'[39m,
              text: [32m'player'[39m,
              toString: [36m[Function: tokenToString][39m,
              offset: [33m14[39m,
              lineBreaks: [33m0[39m,
              line: [33m1[39m,
              col: [33m15[39m
            }
          },
          {
            type: [32m'literal'[39m,
            value: [32m'hits'[39m,
            text: [32m'hits'[39m,
            toString: [36m[Function: tokenToString][39m,
            offset: [33m21[39m,
            lineBreaks: [33m0[39m,
            line: [33m1[39m,
            col: [33m22[39m
          },
          {
            op: {
              type: [32m'co'[39m,
              value: [32m':'[39m,
              text: [32m':'[39m,
              toString: [36m[Function: tokenToString][39m,
              offset: [33m29[39m,
              lineBreaks: [33m0[39m,
              line: [33m1[39m,
              col: [33m30[39m
            },
            lval: {
              type: [32m'literal'[39m,
              value: [32m'rec'[39m,
              text: [32m'rec'[39m,
              toString: [36m[Function: tokenToString][39m,
              offset: [33m26[39m,
              lineBreaks: [33m0[39m,
              line: [33m1[39m,
              col: [33m27[39m
            },
            rval: {
              type: [32m'player'[39m,
              value: [32m'player'[39m,
              text: [32m'player'[39m,
              toString: [36m[Function: tokenToString][39m,
              offset: [33m30[39m,
              lineBreaks: [33m0[39m,
              line: [33m1[39m,
              col: [33m31[39m
            }
          },
          {
            type: [32m'literal'[39m,
            value: [32m'with'[39m,
            text: [32m'with'[39m,
            toString: [36m[Function: tokenToString][39m,
            offset: [33m37[39m,
            lineBreaks: [33m0[39m,
            line: [33m1[39m,
            col: [33m38[39m
          },
          {
            op: {
              type: [32m'co'[39m,
              value: [32m':'[39m,
              text: [32m':'[39m,
              toString: [36m[Function: tokenToString][39m,
              offset: [33m45[39m,
              lineBreaks: [33m0[39m,
              line: [33m1[39m,
              col: [33m46[39m
            },
            lval: {
              type: [32m'literal'[39m,
              value: [32m'att'[39m,
              text: [32m'att'[39m,
              toString: [36m[Function: tokenToString][39m,
              offset: [33m42[39m,
              lineBreaks: [33m0[39m,
              line: [33m1[39m,
              col: [33m43[39m
            },
            rval: {
              type: [32m'attack'[39m,
              value: [32m'attack'[39m,
              text: [32m'attack'[39m,
              toString: [36m[Function: tokenToString][39m,
              offset: [33m46[39m,
              lineBreaks: [33m0[39m,
              line: [33m1[39m,
              col: [33m47[39m
            }
          }
        ],
        body: {
          op: {
            type: [32m'and'[39m,
            value: [32m'and'[39m,
            text: [32m'and'[39m,
            toString: [36m[Function: tokenToString][39m,
            offset: [33m23[39m,
            lineBreaks: [33m0[39m,
            line: [33m2[39m,
            col: [33m24[39m
          },
          lval: [
            [
              {
                type: [32m'ref'[39m,
                name: {
                  type: [32m'literal'[39m,
                  value: [32m'hitter'[39m,
                  text: [32m'hitter'[39m,
                  toString: [36m[Function: tokenToString][39m,
                  offset: [33m2[39m,
                  lineBreaks: [33m0[39m,
                  line: [33m2[39m,
                  col: [33m3[39m
                }
              },
              {
                type: [32m'literal'[39m,
                value: [32m'performs'[39m,
                text: [32m'performs'[39m,
                toString: [36m[Function: tokenToString][39m,
                offset: [33m9[39m,
                lineBreaks: [33m0[39m,
                line: [33m2[39m,
                col: [33m10[39m
              },
              {
                type: [32m'ref'[39m,
                name: {
                  type: [32m'literal'[39m,
                  value: [32m'att'[39m,
                  text: [32m'att'[39m,
                  toString: [36m[Function: tokenToString][39m,
                  offset: [33m19[39m,
                  lineBreaks: [33m0[39m,
                  line: [33m2[39m,
                  col: [33m20[39m
                }
              }
            ]
          ],
          rval: [
            [
              {
                type: [32m'ref'[39m,
                name: {
                  type: [32m'literal'[39m,
                  value: [32m'rec'[39m,
                  text: [32m'rec'[39m,
                  toString: [36m[Function: tokenToString][39m,
                  offset: [33m28[39m,
                  lineBreaks: [33m0[39m,
                  line: [33m2[39m,
                  col: [33m29[39m
                }
              },
              {
                type: [32m'literal'[39m,
                value: [32m'receives'[39m,
                text: [32m'receives'[39m,
                toString: [36m[Function: tokenToString][39m,
                offset: [33m32[39m,
                lineBreaks: [33m0[39m,
                line: [33m2[39m,
                col: [33m33[39m
              },
              {
                type: [32m'ref'[39m,
                name: {
                  type: [32m'literal'[39m,
                  value: [32m'att'[39m,
                  text: [32m'att'[39m,
                  toString: [36m[Function: tokenToString][39m,
                  offset: [33m42[39m,
                  lineBreaks: [33m0[39m,
                  line: [33m2[39m,
                  col: [33m43[39m
                }
              }
            ]
          ]
        }
      },
      {
        target: [
          {
            type: [32m'matches'[39m,
            value: [32m'matches'[39m,
            text: [32m'matches'[39m,
            toString: [36m[Function: tokenToString][39m,
            offset: [33m0[39m,
            lineBreaks: [33m0[39m,
            line: [33m4[39m,
            col: [33m1[39m
          }
        ],
        expr: [
          [
            {
              type: [32m'string'[39m,
              value: [32m'"aslo"'[39m,
              text: [32m'"aslo"'[39m,
              toString: [36m[Function: tokenToString][39m,
              offset: [33m14[39m,
              lineBreaks: [33m0[39m,
              line: [33m4[39m,
              col: [33m15[39m
            },
            {
              type: [32m'literal'[39m,
              value: [32m'hits'[39m,
              text: [32m'hits'[39m,
              toString: [36m[Function: tokenToString][39m,
              offset: [33m21[39m,
              lineBreaks: [33m0[39m,
              line: [33m4[39m,
              col: [33m22[39m
            },
            {
              type: [32m'string'[39m,
              value: [32m'"eibol"'[39m,
              text: [32m'"eibol"'[39m,
              toString: [36m[Function: tokenToString][39m,
              offset: [33m26[39m,
              lineBreaks: [33m0[39m,
              line: [33m4[39m,
              col: [33m27[39m
            },
            {
              type: [32m'literal'[39m,
              value: [32m'with'[39m,
              text: [32m'with'[39m,
              toString: [36m[Function: tokenToString][39m,
              offset: [33m34[39m,
              lineBreaks: [33m0[39m,
              line: [33m4[39m,
              col: [33m35[39m
            },
            {
              type: [32m'string'[39m,
              value: [32m'"fair"'[39m,
              text: [32m'"fair"'[39m,
              toString: [36m[Function: tokenToString][39m,
              offset: [33m39[39m,
              lineBreaks: [33m0[39m,
              line: [33m4[39m,
              col: [33m40[39m
            }
          ]
        ]
      }
    ]
  ]
]
Done in 17.69s.
